summary(travel_df_clean)
# Rename column name
travel_df_clean <- travel_df %>%
rename(respondent_id =1, travel_frequency = 2, checkin_exp = 3,
fly_exp = 4, gender = 5, race=6,
religion = 7)
head(travel_df_clean)
# CONVERT DATA TYPE----
# Convert all variables into integer
# Convert column 2 to 6 to numeric
travel_df_clean[,2:4] <- lapply(travel_df_clean[,2:4], as.numeric)
travel_df_clean[,5:7] <- lapply(travel_df_clean[,5:7], as.factor)
head(travel_df_clean)
set.seed(123)
pairs(travel_df_clean[,-1])
summary(travel_df_clean)
round(sqrt(apply(travel_df_clean[,2:4],2,var)),2)
travel_df_clean[,2:4] <- scale(travel_df_clean[,2:4], center = T, scale = T)
head(travel_df_clean)
gower_dist <- daisy(travel_df_clean[,-1], metric = c("gower"))
gower_dist
euc_dist <- dist(travel_df_clean[,2:4], method = "euclidian")
euc_dist
manhat_dist <- dist(travel_df_clean[,2:4], method = "manhattan")
manhat_dist
aggl_clust_s <- hclust(gower_dist, method = "single")
plot(aggl_clust_s,
main = "Agglomerative, single linkages")
aggl_clust_c <- hclust(gower_dist, method = "complete")
plot(aggl_clust_c,
main = "Agglomerative, complete linkages")
aggl_clust_s_e <- hclust(euc_dist, method = "single")
plot(aggl_clust_s_e,
main = "Agglomerative, single linkages")
aggl_clust_c_e <- hclust(euc_dist, method = "complete")
plot(aggl_clust_c_e,
main = "Agglomerative, complete linkages")
aggl_clust_s_m <- hclust(manhat_dist, method = "single")
plot(aggl_clust_s_m,
main = "Agglomerative, single linkages")
aggl_clust_s_m <- hclust(manhat_dist, method = "complete")
plot(aggl_clust_s_m,
main = "Agglomerative, complete linkages")
ggplot(data = data.frame(t(cstats.table(gower_dist, aggl_clust_c, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
install.packages("fpc")
library(readr)
library(readxl)
library(tidyverse)
library(corrplot)
library(MASS)
library(ggfortify)
library(ggpubr)
library(pvclust)
library(cluster)
library(fpc)
cstats.table <- function(dist, tree, k) {
clust.assess <- c("cluster.number","n","within.cluster.ss","average.within","average.between",
"wb.ratio","dunn2","avg.silwidth")
clust.size <- c("cluster.size")
stats.names <- c()
row.clust <- c()
output.stats <- matrix(ncol = k, nrow = length(clust.assess))
cluster.sizes <- matrix(ncol = k, nrow = k)
for(i in c(1:k)){
row.clust[i] <- paste("Cluster-", i, " size")
}
for(i in c(2:k)){
stats.names[i] <- paste("Test", i-1)
for(j in seq_along(clust.assess)){
output.stats[j, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.assess])[j]
}
for(d in 1:k) {
cluster.sizes[d, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.size])[d]
dim(cluster.sizes[d, i]) <- c(length(cluster.sizes[i]), 1)
cluster.sizes[d, i]
}
}
output.stats.df <- data.frame(output.stats)
cluster.sizes <- data.frame(cluster.sizes)
cluster.sizes[is.na(cluster.sizes)] <- 0
rows.all <- c(clust.assess, row.clust)
# rownames(output.stats.df) <- clust.assess
output <- rbind(output.stats.df, cluster.sizes)[ ,-1]
colnames(output) <- stats.names[2:k]
rownames(output) <- rows.all
is.num <- sapply(output, is.numeric)
output[is.num] <- lapply(output[is.num], round, 2)
output
}
ggplot(data = data.frame(t(cstats.table(gower_dist, aggl_clust_c, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(gower_dist, aggl_clust_c, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(gower_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
aggl_clust_c_m <- hclust(manhat_dist, method = "complete")
plot(aggl_clust_c_m,
main = "Agglomerative, complete linkages")
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
member1 = cutree(aggl_clust_c,6)
table(member)
member1 = cutree(aggl_clust_c,6)
table(member1)
aggregate(nor,list(member1),mean)
aggregate(travel_df_clean,list(member1),mean)
aggregate(travel_df_clean[,-1],list(member1),mean)
aggregate(travel_df_clean[,-1],list(member1),mean)
aggregate(travel_df_clean[,2:4],list(member1),mean)
plot(silhouette(cutree(aggl_clust_c,6), distance))
plot(silhouette(cutree(aggl_clust_c,6), gower_dist))
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
member2 = cutree(aggl_clust_c_m,5)
table(member2)
aggregate(travel_df_clean[,2:4],list(member2),mean)
plot(silhouette(cutree(aggl_clust_c_m,5), manhat_dist))
library(readr)
library(readxl)
library(tidyverse)
library(corrplot)
library(MASS)
library(ggfortify)
library(ggpubr)
library(pvclust)
library(cluster)
library(fpc)
library(factoextra)
k_m <- kmeans(df, centers = 2)
k_m <- kmeans(travel_df_clean[,2:4], centers = 2)
str(k_m)
k_m$centers
k_m
fviz_cluster(k2, data = travel_df_clean[,2:4])
fviz_cluster(k_m, data = travel_df_clean[,2:4])
install.packages("gridExtra")
library(readr)
library(readxl)
library(tidyverse)
library(corrplot)
library(MASS)
library(ggfortify)
library(ggpubr)
library(pvclust)
library(cluster)
library(fpc)
library(factoextra)
library(gridExtra)
k2 <- kmeans(travel_df_clean[,2:4], centers = 2)
str(k2)
k2
fviz_cluster(k2, data = travel_df_clean[,2:4])
k3 <- kmeans(travel_df_clean[,2:4], centers = 3)
k4 <- kmeans(travel_df_clean[,2:4], centers = 4)
k5 <- kmeans(travel_df_clean[,2:4], centers = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df) + ggtitle("k = 2")
k3 <- kmeans(travel_df_clean[,2:4], centers = 3)
k4 <- kmeans(travel_df_clean[,2:4], centers = 4)
k5 <- kmeans(travel_df_clean[,2:4], centers = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data =travel_df_clean[,2:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(travel_df_clean[,2:4], kmeans, method = "wss")
fviz_nbclust(travel_df_clean[,2:4], kmeans, method = "silhouette")
final <- kmeans(travel_df_clean[,2:4], 4)
print(final)
final <- kmeans(travel_df_clean[,2:4], 3)
print(final)
final <- kmeans(travel_df_clean[,2:4], 4)
print(final)
fviz_cluster(final, data = travel_df_clean[,2:4])
manhat_dist <- dist(travel_df_clean[,2:4], method = "manhattan")
euc_dist <- dist(travel_df_clean[,2:4], method = "euclidian")
gower_dist <- daisy(travel_df_clean[,-1], metric = c("gower"))
setwd("~/Downloads/pca project/Clustering_project")
library(readr)
library(readxl)
library(tidyverse)
library(corrplot)
library(MASS)
library(ggfortify)
library(ggpubr)
library(pvclust)
library(cluster)
library(fpc)
library(factoextra)
library(gridExtra)
travel <- read_excel("data_clustering.xlsx")
head(travel)
# First, drop two first rows. Next, filter only data that has 100 in progress
travel <- travel %>%
slice(-c(1,2))
# Select used columns
travel_df <- travel[c(1,5,6,9,12,13,14)]
# CHECK MISSING VALUE----
# Count the missing values by column wise
print("Count of missing values by column wise")
sapply(travel_df, function(x) sum(is.na(x)))
# Missing value imputation
# Since our data contains 46 missing value, let's impute with mode
# Function to see mode
calc_mode <- function(x){
# List the distinct / unique values
distinct_values <- unique(na.omit(x))
# Count the occurrence of each distinct value
distinct_tabulate <- tabulate(match(x, distinct_values))
# Return the value with the highest occurrence
distinct_values[which.max(distinct_tabulate)]
}
# Impute missing value----
travel_df <- travel_df %>%
mutate(across(everything(), ~replace_na(.x, calc_mode(.x))))
# Rename column name
travel_df_clean <- travel_df %>%
rename(respondent_id =1, travel_frequency = 2, checkin_exp = 3,
fly_exp = 4, gender = 5, race=6,
religion = 7)
head(travel_df_clean)
# CONVERT DATA TYPE----
# Convert all variables into integer
# Convert column 2 to 6 to numeric
travel_df_clean[,2:4] <- lapply(travel_df_clean[,2:4], as.numeric)
travel_df_clean[,5:7] <- lapply(travel_df_clean[,5:7], as.factor)
head(travel_df_clean)
set.seed(123)
pairs(travel_df_clean[,-1])
summary(travel_df_clean)
round(sqrt(apply(travel_df_clean[,2:4],2,var)),2)
travel_df_clean[,2:4] <- scale(travel_df_clean[,2:4], center = T, scale = T)
head(travel_df_clean)
gower_dist <- daisy(travel_df_clean[,-1], metric = c("gower"))
as.data.frame.data.frame(gower_dist)
as.data.frame(gower_dist)
as.matrix(gower_dist)
euc_dist <- dist(travel_df_clean[,2:4], method = "euclidian")
as.matrix(euc_dist)
manhat_dist <- dist(travel_df_clean[,2:4], method = "manhattan")
as.matrix(manhat_dist)
aggl_clust_s <- hclust(gower_dist, method = "single")
plot(aggl_clust_s,
main = "Agglomerative, single linkages")
aggl_clust_c <- hclust(gower_dist, method = "complete")
plot(aggl_clust_c,
main = "Agglomerative, complete linkages")
aggl_clust_s_e <- hclust(euc_dist, method = "single")
plot(aggl_clust_s_e,
main = "Agglomerative, single linkages")
aggl_clust_c_e <- hclust(euc_dist, method = "complete")
plot(aggl_clust_c_e,
main = "Agglomerative, complete linkages")
aggl_clust_s_m <- hclust(manhat_dist, method = "single")
plot(aggl_clust_s_m,
main = "Agglomerative, single linkages")
aggl_clust_c_m <- hclust(manhat_dist, method = "complete")
plot(aggl_clust_c_m,
main = "Agglomerative, complete linkages")
cstats.table <- function(dist, tree, k) {
clust.assess <- c("cluster.number","n","within.cluster.ss","average.within","average.between",
"wb.ratio","dunn2","avg.silwidth")
clust.size <- c("cluster.size")
stats.names <- c()
row.clust <- c()
output.stats <- matrix(ncol = k, nrow = length(clust.assess))
cluster.sizes <- matrix(ncol = k, nrow = k)
for(i in c(1:k)){
row.clust[i] <- paste("Cluster-", i, " size")
}
for(i in c(2:k)){
stats.names[i] <- paste("Test", i-1)
for(j in seq_along(clust.assess)){
output.stats[j, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.assess])[j]
}
for(d in 1:k) {
cluster.sizes[d, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.size])[d]
dim(cluster.sizes[d, i]) <- c(length(cluster.sizes[i]), 1)
cluster.sizes[d, i]
}
}
output.stats.df <- data.frame(output.stats)
cluster.sizes <- data.frame(cluster.sizes)
cluster.sizes[is.na(cluster.sizes)] <- 0
rows.all <- c(clust.assess, row.clust)
# rownames(output.stats.df) <- clust.assess
output <- rbind(output.stats.df, cluster.sizes)[ ,-1]
colnames(output) <- stats.names[2:k]
rownames(output) <- rows.all
is.num <- sapply(output, is.numeric)
output[is.num] <- lapply(output[is.num], round, 2)
output
}
ggplot(data = data.frame(t(cstats.table(gower_dist, aggl_clust_c, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(gower_dist, aggl_clust_c, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
member1 = cutree(aggl_clust_c,6)
table(member1)
aggregate(travel_df_clean[,2:4],list(member1),mean)
plot(silhouette(cutree(aggl_clust_c,6), gower_dist))
plot(silhouette(cutree(aggl_clust_c,6), gower_dist))
plot(silhouette(cutree(aggl_clust_c,6), gower_dist), col ="blue")
plot(silhouette(cutree(aggl_clust_c,6), gower_dist), col ="blue")
plot(silhouette(cutree(aggl_clust_c,6), gower_dist), col ="blue")
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
member2 = cutree(aggl_clust_c_m,5)
table(member2)
aggregate(travel_df_clean[,2:4],list(member2),mean)
plot(silhouette(cutree(aggl_clust_c_m,5), manhat_dist), col = "blue")
plot(silhouette(cutree(aggl_clust_c_m,5), manhat_dist), col = "blue")
plot(silhouette(cutree(aggl_clust_c_m,5), manhat_dist), col = "blue")
plot(silhouette(cutree(aggl_clust_c,6), gower_dist), col ="blue")
plot(silhouette(cutree(aggl_clust_c,6), gower_dist))
k2 <- kmeans(travel_df_clean[,2:4], centers = 2)
str(k2)
k2
fviz_cluster(k2, data = travel_df_clean[,2:4])
fviz_cluster(k2, data = travel_df_clean[,2:4])
k3 <- kmeans(travel_df_clean[,2:4], centers = 3)
k4 <- kmeans(travel_df_clean[,2:4], centers = 4)
k5 <- kmeans(travel_df_clean[,2:4], centers = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data =travel_df_clean[,2:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
k3 <- kmeans(travel_df_clean[,2:4], centers = 3)
k4 <- kmeans(travel_df_clean[,2:4], centers = 4)
k5 <- kmeans(travel_df_clean[,2:4], centers = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data =travel_df_clean[,2:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = travel_df_clean[,2:4]) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(travel_df_clean[,2:4], kmeans, method = "wss")
fviz_nbclust(travel_df_clean[,2:4], kmeans, method = "silhouette")
final <- kmeans(travel_df_clean[,2:4], 4)
print(final)
fviz_cluster(final, data = travel_df_clean[,2:4])
gap_stat <- clusGap(travel_df_clean[,2:4], FUN = kmeans,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
travel_df_clean %>%
mutate(Cluster = final$cluster)
View(travel_df_clean)
final_df <- travel_df_clean %>%
mutate(Cluster = final$cluster)
final_df <- final_df[,1,8,2,3,4,5,6,7]
head(final_df)
final_df <- travel_df_clean %>%
mutate(Cluster = final$cluster)
final_df <- final_df[,c(1,8,2,3,4,5,6,7)]
head(final_df)
summary(gower_dist)
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = race)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, travel_frequency, color = gender))  + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(col = member2) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = travel_df_clean$gender))  + geom_point(col = member2) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = travel_df_clean$gender))  + geom_point(alpha = 0.4, size = 3.5)+ geom_point(col = member2) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(alpha = 0.4, size = 3.5) + geom_point(col = member2) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(alpha = 0.4) + geom_point(col = member2) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
ggplot(data = data.frame(t(cstats.table(euc_dist, aggl_clust_c_e, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(euc_dist, aggl_clust_c_ee, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(euc_dist, aggl_clust_c_e, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
member = cutree(aggl_clust_c_e,5)
table(member)
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(alpha = 0.4) + geom_point(col = member) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
fviz_cluster(list(data = travel_df_clean[,2:4], cluster = member))
member1 = cutree(aggl_clust_c,5)
table(member1)
aggregate(travel_df_clean[,2:4],list(member1),mean)
plot(silhouette(cutree(aggl_clust_c,5), gower_dist), col ="blue")
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(alpha = 0.4) + geom_point(col = member1) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
fviz_cluster(list(data = travel_df_clean[,2:4], cluster = member1))
plot(silhouette(cutree(aggl_clust_c_e,5), euc_dist), col = "blue")
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = data.frame(t(cstats.table(manhat_dist, aggl_clust_c_m, 10))),
aes(x=cluster.number, y=avg.silwidth)) +
geom_point()+
geom_line()+
ggtitle("Agglomerative clustering") +
labs(x = "Num.of clusters", y = "Average silhouette width") +
theme(plot.title = element_text(hjust = 0.5))
member2 = cutree(aggl_clust_c_m,5)
table(member2)
ggplot(travel_df_clean, aes(checkin_exp, fly_exp, color = gender))  + geom_point(alpha = 0.4) + geom_point(col = member2) +
scale_color_manual(values = c('black', 'red', 'green','blue'))
fviz_cluster(list(data = travel_df_clean[,2:4], cluster = member1))
fviz_cluster(list(data = travel_df_clean[,2:4], cluster = member))
fviz_cluster(list(data = travel_df_clean[,2:4], cluster = member2))
